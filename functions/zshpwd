# -*-shell-script-*-

# if we find a .go-env in the new working directory, we'll execute it... we'll
# also save the pwd and if it changes (we change directory out of it, the
# environment will be removed by the removal function placed inside of it... or
# something like that

# As of go 1.2, a valid GOPATH is required to use the `go get` command:
#   http://golang.org/doc/code.html#GOPATH
#
# `go vet` and `go doc` are now part of the go.tools sub repo:
#   http://golang.org/doc/go1.2#go_tools_godoc
#
# To get `go vet` and `go doc` run:
#   go get code.google.com/p/go.tools/cmd/godoc
#   go get code.google.com/p/go.tools/cmd/vet
#
# You may wish to add the GOROOT-based install location to your PATH:
#   export PATH=$PATH:/usr/local/opt/go/libexec/bin
#
# Bash completion has been installed to:
#   /usr/local/etc/bash_completion.d
#
# zsh completion has been installed to:
#   /usr/local/share/zsh/site-functions

function chpwd_go-env_file() {
  local __back=$(pwd)

  if [ -f .go-env ]; then
    for godir in (bin pkg src); do
      mkdir -p godir
      if [ -f .gitignore ]; then
        [ "$(grep "$godir\/" .gitignore)" -eq "0" ] || echo "$godir/" >> .gitignore
      fi
    done

    export GOPATH=$(__back)
    export PATH="$GOPATH/bin:$PATH"
    echo "${fg_bold[blue]}--->${reset_color} ${fg_bold[white]}loaded env${reset_color}"
  fi
}
chpwd_functions=(${chpwd_functions[@]} "chpwd_go-env_file")
